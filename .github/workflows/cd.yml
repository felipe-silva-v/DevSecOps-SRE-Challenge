name: Continuous Deployment

# Trigger CD pipeline only on pushes to the main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu environment

    steps:
      - name: Checkout code
        # Check out the repository code into the workflow
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        # Authenticate to Google Cloud using the service account credentials stored as a GitHub secret
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }} # Securely use credentials from GitHub Secrets

      - name: Set up gcloud CLI
        # Install and configure the gcloud CLI for deployment
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: devsecops-sre-challenge # Set the Google Cloud project ID
          service_account_key: ${{ secrets.GCP_CREDENTIALS }} # Use the credentials for authentication

      - name: Authenticate Docker with GCR
        # Manually authenticate Docker with GCR
        run: |
          echo "Authenticating Docker with GCR..."
          echo "$(gcloud auth print-access-token)" | docker login -u oauth2accesstoken --password-stdin https://gcr.io

      - name: Build and push Docker image
        # Build the Docker image for the API and push it to Google Container Registry (GCR)
        run: |
          echo "Building Docker image..."
          docker build -t gcr.io/devsecops-sre-challenge/flask-api:latest ./api # Build the Docker image
          echo "Pushing Docker image to GCR..."
          docker push gcr.io/devsecops-sre-challenge/flask-api:latest # Push the image to GCR

      - name: Deploy API to Cloud Run
        # Deploy the Docker image to Google Cloud Run
        run: |
          echo "Deploying API to Cloud Run..."
          gcloud run deploy flask-api \
            --image gcr.io/devsecops-sre-challenge/flask-api:latest \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --add-cloudsql-instances devsecops-sre-challenge:us-central1:postgres-instance
